[NginxAccess]
type = "LogstreamerInput"
log_directory = "/data/logs/nginx"
file_match = '(?P<Domain>[^/]+)/access\.log'
decoder = "NginxAccessLogDecoder"
differentiator = ["Domain"]

[NginxError]
type = "LogstreamerInput"
log_directory = "/data/logs/nginx"
file_match = '(?P<Domain>[^/]+)/error\.log'
decoder = "NginxErrorLogDecoder"
differentiator = ["nginx-", "Domain", "-error"]

[NginxErrorLogDecoder]
type = "SandboxDecoder"
script_type = "lua"
filename = "lua_decoders/nginx_error.lua"

[NginxErrorLogDecoder.config]
tz = "UTC"

[NginxAccessLogDecoder]
type = "SandboxDecoder"
script_type = "lua"
filename = "lua_decoders/nginx_access.lua"

[NginxAccessLogDecoder.config]
type = "nginx.access"
user_agent_transform = true
log_format = '$remote_addr $http_host $remote_user [$time_local] "$request_method $request_uri $server_protocol" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"'

<% if @log_tcp_host -%>
[AggregatorOutput]
type = "TcpOutput"
address = "<%= @log_tcp_host %>"
message_matcher = "TRUE" 
<% end -%>

# [SyslogHostLogs]
# type = "LogstreamerInput"
# log_directory = "/data/syslogs/hosts"
# file_match = '(?P<Host>[^/]+)/host\.log'
# decoder = "HostLogDecoder"
# differentiator = ["Host"]
# 
# [HostLogDecoder]
# type = "PayloadRegexDecoder"
# match_regex = '^(?P<Timestamp>\w{3} [ \d]\d \d\d:\d\d:\d\d) (?P<Hostname>[\w\d\.]+) (?P<ProgramName>\S+?)(?P<Pid>\[\d+\])?: (?P<Message>.+)'
# timestamp_layout = 'Jan 2 15:04:05'
# 
# [HostLogDecoder.message_fields]
# Type = "host.log"
# Hostname = "%Hostname%"
# msg = "%Message%"
# programname = "%ProgramName%"
# pid = "%Pid%"
# Payload = ""

[SyslogAppLogs]
type = "LogstreamerInput"
log_directory = "/data/syslogs/apps"
file_match = 'http_app_(?P<AppId>[^/]+)/app\.log'
decoder = "AppLogDecoder"
differentiator = ["AppId"]

[AppLogDecoder]
type = "PayloadRegexDecoder"
match_regex = '^(?P<Timestamp>\w{3} [ \d]\d \d\d:\d\d:\d\d) (?P<Hostname>[\w\d\.]+): \[(?P<UserId>.*)\]\[(?P<RemoteAddr>)\] (?P<Logger>\S+?):(?P<LogLevel>\S+) (?P<Message>.+)'
timestamp_layout = 'Jan 2 15:04:05'

[AppLogDecoder.message_fields]
Type = "app.log"
Hostname = "%Hostname%"
LoggerName = "%Logger%"
LogLevel = "%LogLevel%"
Message = "%Message%"
UserId = "%UserId%"
RemoteAddr = "%RemoteAddr%"
Payload = ""

<% if @mkt_prod %>
[mktnginxdecoder]
type = "PayloadRegexDecoder"
match_regex = '^(?P<RemoteIP>(?:\d{1,3}\.){3}\d{1,3}) (?P<Host>\S+) \S+ \[(?P<Timestamp>\d\d/\w{3}/\d{4}:\d\d:\d\d:\d\d) \+\d+\] "(?P<Method>\w+) (?P<Url>\S+) HTTP.+?" (?P<StatusCode>\d+) (?P<Bytes>\d+) "(?P<Referer>.+?)" "(?P<UserAgent>.+?)" .*"DNT:(?P<DNT>.+?)" "X-MOZ-B2G-DEVICE:(?P<XMOZDevice>.*) X-MOZ-B2G-MCC:(?P<XMOZMcc>.*) X-MOZ-B2G-MNC:(?P<XMOZMnc>.*) X-MOZ-B2G-SHORTNAME:(?P<XMOZShortname>.*) X-MOZ-B2G-LONGNAME:(?P<XMOZLongname>.*)"'
timestamp_layout = '02/Jan/2006:15:04:05'

[mktnginxdecoder.message_fields]
Type = "nginx.mkt.logline"
RemoteIP|ipv4 = "%RemoteIP%"
Host = "%Host%"
Method = "%Method%"
UserAgent = "%UserAgent%"
Url|uri = "%Url%"
StatusCode = "%StatusCode%"
Bytes|B = "%Bytes%"
Referer = "%Referer%"
DNT = "%DNT%"
XMOZDevice = "%XMOZDevice%"
XMOZMcc = "%XMOZMcc%"
XMOZMnc = "%XMOZMnc%"
XMOZShortname = "%XMOZShortname%"
XMOZLongname = "%XMOZLongname%"
Payload = ""

[MktLogFileInput]
type = "LogfileInput"
logfile = "/var/log/nginx/marketplace.firefox.com/metrics.log"
logger = "nginx-metrics-mkt-prod"
decoder = "mktnginxdecoder"

[output]
type = "AMQPOutput"
url = "amqp://hekad:hekad@log1.mktmon.services.phx1.mozilla.com:5565/hekad"
exchangeType = "fanout"
exchange = "hekad"
message_matcher = "Type == 'nginx.mkt.logline'"
<% end %>
