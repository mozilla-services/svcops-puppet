[hekad]
maxprocs = 2  # # of cores heka can use

[UdpInput]
address = "<%= udp_listen_address %>" 
parser_type = "message.proto"
decoder = "ProtobufDecoder"

[StatAccumulator]
type="StatAccumInput"
emit_in_payload = true
emit_in_fields = true
ticker_interval = 5

[GeneralCounterFilter]
type="StatFilter"
stat_accum_input = "StatAccumulator"
message_matcher = 'Type == "counter"'

[GeneralCounterFilter.Metric.hits]
type = "Counter"
name = "stats.%name%"
value = "%Payload%"

[GeneralTimerFilter]
type="StatFilter"
stat_accum_input = "StatAccumulator"
message_matcher = 'Type == "timer"'

[GeneralTimerFilter.Metric.timing]
type = "Timer"
name = "stats.%name%"
value = "%Payload%"

[StatsdInput]
address = "<%= @statsd_address %>"
stat_accum_name = 'StatAccumulator'

[CarbonOutput]
message_matcher = "Type == 'heka.statmetric'"
address = "<%= carbon_output_address %>"

<% if @log_output -%>
# You can comment this block out if you don't want hekad to spew log
# messages to stdout
[LogOutput]
message_matcher = "TRUE"
payload_only = false
<% end -%>

[SentryOutput]
max_udp_sockets = 100
max_sentry_bytes = 100000
message_matcher = "Type == 'sentry'"

[DashboardOutput]
ticker_interval = 5
static_directory = "/usr/share/heka/dasher"
